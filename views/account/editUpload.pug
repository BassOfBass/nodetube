extends ../layout

block content
  h1 Edit Upload
  div
    a(href=`/user/${upload.uploader.channelUrl}`) View Channel
  div
    a(href=`/user/${upload.uploader.channelUrl}/${upload.uniqueTag}`) View Upload

  form.edit-upload-form(action=`${thumbnailServer}/api/upload/${upload.uniqueTag}/edit`, method='POST' enctype="multipart/form-data" novalidate )
    input(type='hidden', name='_csrf', value=_csrf)
    input(type='hidden', name='uploadToken', value=user.uploadToken)
    div
      label(for='title') Title:
      input(type='text', name='title', id='title', minlength=3, maxlength=150 value=upload.title)
    div
      label(for='description') Description
        textarea(id="description" name="description" maxlength='2000' rows="10" cols="70" style="color:black") #{upload.description}

    div
      div.dropdown(style="display:inline;padding-right:15px;")
        button#dropdownMenu1.dropdown-toggle(type='button', data-toggle='dropdown' style="border-radius:5px;")
          | Category: &nbsp
          span.caret

        ul.dropdown-menu(role='menu', aria-labelledby='dropdownMenu1')
          each category in categories
            li(role='presentation')
              if category.displayName !== 'All Uploads' && category.displayName !== 'Category Overview'
                a.categoryValue(style="cursor:pointer;" data-value=category.name data-displayname=category.displayName) #{category.displayName}

      div.categoryName(style="display:none")
        h5.categoryDisplayName Category: $Thing

        //- subcategories
        each category in categories
          if category.subcategories && category.subcategories.length > 1
            div.subcategories(class=category.name style="display:none;")
              label(for='subcategory') Subcategory (Optional)
              each subcategory in category.subcategories
                div.subcategory(class=category.name style="display:none")
                  label
                  input(type='radio', name='subcategory' value=subcategory.name required)
                  | #{subcategory.displayName}

    if upload.uploader.plan == "plus"
      fieldset
        legend Visibiliy
        div
          input(type='radio', name='visibility', value='public', checked=(upload.visibility == 'public' ? 'checked': undefined))
          label Public
        div
          input(type='radio', name='visibility', value='unlisted', checked=(upload.visibility == 'unlisted' ? 'checked': undefined))
          label Unlisted (only users with the link can view the content)
        div
          input(type='radio', name='visibility', value='private', checked=(upload.visibility == 'private' ? 'checked': undefined))
          label Private (only you can view the content)

    //- dont show if its already moderated by admin or mod
    if !hideRatingFrontend
      fieldset
        legend Rating
          div
            input(type='radio', name='rating' value="sensitive" required checked=(rating==='sensitive' ? "checked" : undefined))
            label Sensitive (Shocking content) 18+
          div
            input(type='radio', name='rating' value="mature" checked=(rating==='mature' ? "checked" : undefined) )
            label Not Safe For Work
          div
            input(type='radio', name='rating' value="allAges" checked=(rating==='allAges' ? "checked" : undefined) )
            label Safe For Work

    //- thumbnail functionality if it's audio or video file. images naturally don't have a thumbnail (but maybe they should so that they're smaller in size)
    if ( upload.fileType == 'video' || upload.fileType == 'audio' ) && !upload.thumbnails.custom
        p= upload.thumbnails.custom

        divdiv
            label(for='filetoupload' style="") Upload Thumbnail
                // TODO: check this size
                input.center-block.text-center.upload-thumbnail-input(class="upload-file" data-max-size="500000000" type="file" id="filetoupload" name="filetoupload" accept="image/*")


            // taking this out as it's no longer the dimensions
            //divdiv
                //div.
                //p(style="white-space:pre-line;margin-top:-15px;").
                //    Thumbnail resolution:
                //        width: 302px;
                //        height: 168x;



    if upload.customThumbnailUrl || upload.thumbnails.custom
        // DELETE FUNCTIONALITY
        label(for='' style="text-align:right;") Upload Thumbnail
            // TODO: need to do the data migration here
            if upload.thumbnails.custom
                img(src=`${uploadServer}/${upload.uploader.channelUrl}/${upload.thumbnails.custom}` style="width:301.96px;height:167.969px")
            else
                img(src=upload.customThumbnailUrl style="width:301.96px;height:167.969px")

            div
            div
                // What is wrong with Pug? It randomly hides the form. So it was hiding my old form but now I put this
                // random empty form in front, and it is being hidden but now my second one shows up.
                form
                form.form-horizontal.delete-thumbnail-form(action=`${thumbnailServer}/api/upload/${upload.uniqueTag}/thumbnail/delete` method="POST")
                    input(type='hidden', name='_csrf', value=_csrf)
                    input(type="hidden" name="channelUrl" value=`${user.channelUrl}`)
                    input(type="hidden" name="uploadToken" value=`${user.uploadToken}`)

                    br

                    button.btn.btn.btn-danger.deleteThumbnailButton(type='submit' style="margin-top:20px;margin-bottom:31px;")
                        i.fa.fa-pencil
                        | Delete Thumbnail


    if !upload.webVTTPath
        // input for captions
        label(for='webvtt' style="text-align:right;") Captions
            // TODO: check this size
            // TODO: check how to do accept with srt and vtt
            //input.center-block.text-center.upload-thumbnail-input(class="upload-file" data-max-size="500000000" type="file" id="webvtt" name="webvtt" accept=".vtt")

            // allow srt and webvtt
            input.center-block.text-center.upload-thumbnail-input(class="upload-file" data-max-size="500000000" type="file" id="webvtt" name="webvtt" accept=".vtt,.srt")


    if upload.webVTTPath
        divdiv
            .col-sm-offset-3.col-sm-4


                label(for='' style="text-align:right;") Captions
                // TODO: link this directly to the .vtt file so you can see what it is
                a(href=`${uploadServer}/${upload.uploader.channelUrl}/${upload.uniqueTag}.vtt`)
                    p VTT Captions

                    button.btn.btn.btn-danger.deleteCaptionsButton(type='submit' style="margin-top:20px")
                            i.fa.fa-pencil
                            | Delete Captions
        br

        // if it's an image
    divdiv
          .col-sm-offset-3.col-sm-4
              button.btn.btn.btn-primary.submitEditButton(type='submit' style="border-radius:4px;margin-top:10px;")
                  i.fa.fa-pencil
                  | Edit Upload
  
  form.editLink(action="/api/upload/delete" method="POST" style="border-radius:4px;margin-top:10px;")
          .col-sm-offset-3.col-sm-4
            input(type='hidden', name='_csrf', value=_csrf)
            input(type='hidden', name='videoId', value=upload.uniqueTag)
            button.btn.btn-danger.delete-media Delete

  //label(for='filetoupload' style="") Channel Thumbnail
  //input.center-block.text-center(style="margin-bottom:40px" class="upload-file" data-max-size="500000000" type="file" id="filetoupload" name="filetoupload" accept="image/*")



  // add here

  script.
    $('.delete-media').on('click', function (e) {
      e.preventDefault();
      var form = $(this).parents('form');

      swal({
        title: "WARNING",
        text: "Are you sure you want to delete this upload?",
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: "Yes, delete it"
      }).then(function (result) {
        if (result.value == true) {
          form.submit();
        }
        console.log(result);
      })
    });

  script.
      $(document).ready(function(){

        $('.submitEditButton').on('click', function(){
          $('form.edit-upload-form').submit();
        })


        // send a post request to delete the captions
        $('.deleteCaptionsButton').on('click', function(){

          var csrf = '#{_csrf}';

          var uniqueTag = '#{upload.uniqueTag}';

          var data = {
            _csrf: csrf,
            uniqueTag
          }

          $.ajax({
            type: 'POST',
            url: '/api/upload/' + uniqueTag + '/captions/delete',
            data,
            success: function (data) {
              console.log(data);

              if (data == 'success') {
                location.reload();
                return false;
              } else {

              }
            },
            error: function (err) {
              console.log(err);
            }
          });
        })
      })

  script.
    function getParameterByName(name, url) {
      if (!url) url = window.location.href;
      name = name.replace(/[\[\]]/g, "\\$&");
      var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(url);
      if (!results) return null;
      if (!results[2]) return '';
      return decodeURIComponent(results[2].replace(/\+/g, " "));

    }

    var thumbnailDeleted = getParameterByName('thumbnailDeleted');

    if (thumbnailDeleted) {
      // scroll into view
      swal('The thumbnail has been deleted')
    }

    var updateSuccess = getParameterByName('update');

    if (updateSuccess) {
      // scroll into view
      swal('The upload has been updated')
    }


  script.

    var category;

    $('.categoryValue').click(function () {
      var value = $(this).data("value");

      var displayName = $(this).data("displayname");

      // hide all subcategories
      $('.subcategories').hide();

      var selectedCategory = value;

      // display selected category
      $('.categoryDisplayName').text('Category: ' + displayName)

      // show subcategories if they exist
      $('.categoryName').show();
      $('.' + value).show();


      category = value;

      console.log(value, displayName);
    })

    // capture submit
    $('.edit-upload-form').submit(function (event ) {

      var url = [location.protocol, '//', location.host, location.pathname].join('');

      event.preventDefault();

      var $theForm = $(this);

      var data = new FormData($theForm[0]);

      data.append('category', category)

      // send xhr request
      $.ajax({
        type: $theForm.attr('method'),
        url: $theForm.attr('action'),
        data,
        cache: false,
        contentType: false,
        processData: false,
        success: function(data){
          // TODO: can turn into /user/anthony/tSIHmBf/edit?update=success?update=success
          window.location = url + '?update=success'
          console.log(data);
        }
      })
          // prevent submitting again
      return false;

    });

    // capture submit
    $('.delete-thumbnail-form').submit(function (event) {

      var url = [location.protocol, '//', location.host, location.pathname].join('');

      event.preventDefault();

      var $theForm = $(this);

      var data = new FormData($theForm[0]);

      // send xhr request
      $.ajax({
        type: $theForm.attr('method'),
        // POST to the url of the form
        url: $theForm.attr('action'),
        data,
        cache: false,
        contentType: false,
        processData: false,
        success: function (data) {
          // TODO: can turn into /user/anthony/tSIHmBf/edit?update=success?update=success
          window.location = url + '?thumbnailDeleted=true'
          console.log(data);
        }
      })
      // prevent submitting again
      return false;

    });


    var uploadCategory = '#{upload.category}'

    if (uploadCategory) {

      $('.categoryValue').filter('[data-value=' + uploadCategory + ']').click()
    }

    var uploadSubcategory = '#{upload.subcategory}'

    if (uploadSubcategory) {
      $("input[value=" + uploadSubcategory +  "]").click()
    }

