/* Generic selectors */
// only tag name selectors and their pseudo-classes/pseudo-elements are allowed there

:root {
  --colour0-primary: hsl(0, 0%, 20%);
  --colour0-secondary: hsl(0, 0%, 80%);

  // buttons
  --colour-positive: 120;
  --colour-negative: 0;
  --colour-submit: 220;

   // widths
   --width-mobile: 360px;
   --width-tablet: 720px;
   --width-desktop: 1080px;
   --input-min-height: 44px;
   --input-min-width: 44px;

   // durations for transition and transform properties
  --duration-none: 0;
  --duration-fast: 0.25s;
  --duration-norm: 0.5s;
  --duration-slow: 1s;
  --duration-global: var(--duration-norm);
}

h1 {
  text-align: center;
  text-transform: capitalize;
}

/* Text content */

// Set consistent line height across several text elements 
p,
li,
dt,
dd {
  line-height: 1.5;
}

li {
  text-align: inherit;
}

details {
  display: block; // Add the correct display in Edge, IE 10+, and Firefox.
}

summary {
  display: list-item; // Add the correct display in all browsers.
}

/* END Text content */

/* Inline text semantics */

b,
strong {
  font-weight: bolder; // Add the correct font weight in Chrome, Edge, and Safari.
}

code,
kbd,
samp,
pre {
  font-family: monospace, monospace; // Correct the inheritance and scaling of font size in all browsers.
  font-size: 1em; // Correct the odd `em` font sizing in all browsers.
}

hr {
  box-sizing: content-box; // Add the correct box sizing in Firefox.
  height: 0; // Add the correct box sizing in Firefox.
  overflow: visible; // Show the overflow in Edge and IE.
}

small {
  font-size: 80%; // Add the correct font size in all browsers.
}

// Prevent `sub` and `sup` elements from affecting the line height in all browsers.
sub, 
sup { 
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

u {
  text-decoration: #f00 wavy underline;
}

/* END Inline text semantics */

/* Image and multimedia */

img {
  border-style: none; // Remove the border on images inside links in IE 10.
}

/* END Image and multimedia */

/* Forms */

button, 
input, 
optgroup,
select, 
textarea { 
  box-sizing: border-box;
  /* 
    Interactive elements such as form input should provide an area large enough that it is easy to activate them. This helps a variety of people, including people with motor control issues and people using non-precise forms of input such as a stylus or fingers. A minimum interactive size of 44×44 CSS pixels is recommended. 
  */
  min-width: var(--input-min-width);
  width: 100%;
  max-width: var(--mobile-width);
  min-height: var(--input-min-height);
  font-family: inherit; // Change the font styles in all browsers.
  font-size: 100%; // Change the font styles in all browsers.
  line-height: 1.15; // Change the font styles in all browsers.
  border-radius: 5px;
  padding: 0.5em;
  /* 
    Large amounts of interactive content — including buttons — placed in close visual proximity to each other should have space separating them. This spacing is beneficial for people who are experiencing motor control issues, who may accidentally activate the wrong interactive content. 
  */
  margin: 1em;
}

button, 
select {
  text-transform: none; // Remove the inheritance of text transform in Firefox.
}

input,
textarea {
  color: hsl(0, 0%, 0%);
  /* 
    A property specific to text entry-related elements is the CSS caret-color property, which lets you set the color used to draw the text input caret: 
  */
  caret-color: inherit;
  background-color: hsl(0, 0%, 100%);
}

form {
  max-width: var(--width-mobile);
  color: var(--colour0-primary);
  background-color: var(--colour0-secondary);
  border-radius: 1em;
  border: 1px solid var(--colour0-primary);
  padding: 1em;

  & > div {
    margin: 1em 0;

    &:first-of-type {
      margin-top: 0;
    }

    & > * {
      margin: 0;
    }
  }
}

label {
  color: var(--colour0-primary);
  padding: 0.5em;
  cursor: pointer;
}

textarea {
  overflow: auto; // Remove the default vertical scrollbar in IE 10+.
  resize: vertical;
}

button,
textarea,
input,
select {

  &::disabled {
    cursor: not-allowed;
  }
}

/* END Forms */

/* END Generic selectors */

/* Attribute selectors */
// only selectors by atttributes go there

input,
textarea {
  &[readonly] {
    background-color: var(--colour0-secondary);
    border: 1px solid transparent;

    &:focus {
      box-shadow: none;
    }
  }
}

/* END Attribute selectors */

/* Class selectors */
// only selectors by class go there

// hidden switchers
.hiddenpointer {
  display: block;
  padding: 0;
}

input {

  &[name="hiddenswitch"] {

    & + * {
      display: none;
      transition-property: height;
      transition-duration: var(--duration-global);
    }

    &:checked + * {
      display: initial;
    }
  } 
}

/* admin/invitations.pug */
section.invitations {

  & > .controls {
    text-align: center;
  }

  & > .invitationcard {
    border-radius: 1em;
    border: 2px solid var(--colour0-primary);
    padding: 0.5em;
    margin: 1em;

    & > .guests {
      border-top: 1px solid var(--colour0-primary);
      padding: 0;

      & > .guestlist {
        display: flex;
        flex-flow: row wrap;
        justify-content: space-evenly;
        align-items: center;

        & > .guestcard {
          border-radius: 5px;
          border: 1px solid var(--colour0-primary);
        }
      }
    }
  }
}

section.invitationcreate {
  display: flex;
  flex-flow: column wrap;
  justify-content: center;
  align-items: center;

  & > h2 {

    & button {
      padding: 0;
    }
  }

  & .buttons {
    text-align: center;
    margin-bottom: 0;

    & button[type="submit"] {
      width: auto;
      color: hsl(240, 100%, 50%);
      background-color: hsl(182, 25%, 50%);
    }
  }
}
/* END admin/invitations.pug */

/* admin/invitations/details.pug */
/* END admin/invitations/details.pug */

/* admin/invitations/edit.pug */
section.invitationedit {
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;

  & .buttons {
    text-align: center;
  }
}
/* END admin/invitations/edit.pug */

/* END Class selectors */

